<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="23" passed="19">
  <reporter-output>
  </reporter-output>
  <suite name="EmployeeRESTAPISuite" duration-ms="18773" started-at="2020-08-12T08:42:33Z" finished-at="2020-08-12T08:42:52Z">
    <groups>
    </groups>
    <test name="employeeRestAPITest" duration-ms="18773" started-at="2020-08-12T08:42:33Z" finished-at="2020-08-12T08:42:52Z">
      <class name="com.api.testcase.TC003_POST_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="setUp" is-config="true" duration-ms="3" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="createEmployee" is-config="true" duration-ms="8466" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="checkContentLength" duration-ms="1" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="FAIL" signature="checkContentType()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="checkContentType" duration-ms="1" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [application/json;charset=utf-8] but found [application/json]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [application/json;charset=utf-8] but found [application/json]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.api.testcase.TC003_POST_Employee_Record.checkContentType(TC003_POST_Employee_Record.java:89)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="checkResponseBody" duration-ms="1" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="FAIL" signature="checkResponseTime()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="checkResponseTime" duration-ms="1" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.api.testcase.TC003_POST_Employee_Record.checkResponseTime(TC003_POST_Employee_Record.java:71)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="checkServerType" duration-ms="2" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="checkStatusCode" duration-ms="1" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="checkStatusLine" duration-ms="1" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.testcase.TC003_POST_Employee_Record@2cb4c3ab]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.testcase.TC003_POST_Employee_Record -->
      <class name="com.api.testcase.TC004_PUT_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="setUp" is-config="true" duration-ms="2" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="createEmployee" is-config="true" duration-ms="6139" started-at="2020-08-12T08:42:46Z" finished-at="2020-08-12T08:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="checkContentLength" duration-ms="1" started-at="2020-08-12T08:42:52Z" finished-at="2020-08-12T08:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="FAIL" signature="checkContentType()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="checkContentType" duration-ms="1" started-at="2020-08-12T08:42:52Z" finished-at="2020-08-12T08:42:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [application/json;charset=utf-8] but found [application/json]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [application/json;charset=utf-8] but found [application/json]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.api.testcase.TC004_PUT_Employee_Record.checkContentType(TC004_PUT_Employee_Record.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="checkResponseBody" duration-ms="1" started-at="2020-08-12T08:42:52Z" finished-at="2020-08-12T08:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="checkResponseTime" duration-ms="4" started-at="2020-08-12T08:42:52Z" finished-at="2020-08-12T08:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="checkServerType" duration-ms="1" started-at="2020-08-12T08:42:52Z" finished-at="2020-08-12T08:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="checkStatusCode" duration-ms="1" started-at="2020-08-12T08:42:52Z" finished-at="2020-08-12T08:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="checkStatusLine" duration-ms="1" started-at="2020-08-12T08:42:52Z" finished-at="2020-08-12T08:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.testcase.TC004_PUT_Employee_Record@13c78c0b]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-08-12T08:42:52Z" finished-at="2020-08-12T08:42:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.testcase.TC004_PUT_Employee_Record -->
      <class name="com.api.testcase.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="setUp" is-config="true" duration-ms="147" started-at="2020-08-12T08:42:33Z" finished-at="2020-08-12T08:42:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="getAllEmployees" is-config="true" duration-ms="3798" started-at="2020-08-12T08:42:33Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkContentEncoding" duration-ms="6" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkContentLength" duration-ms="10" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkContentType" duration-ms="1" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkCookies" duration-ms="1" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkResponseBody" duration-ms="60" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="FAIL" signature="checkResponseTime()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkResponseTime" duration-ms="5" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.api.testcase.TC001_Get_All_Employees.checkResponseTime(TC001_Get_All_Employees.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkServerType" duration-ms="6" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkStatusCode" duration-ms="3" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="checkStatusLine" duration-ms="1" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.testcase.TC001_Get_All_Employees@50f8360d]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-08-12T08:42:37Z" finished-at="2020-08-12T08:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.testcase.TC001_Get_All_Employees -->
    </test> <!-- employeeRestAPITest -->
  </suite> <!-- EmployeeRESTAPISuite -->
</testng-results>
